---
http_interactions:
- request:
    method: get
    uri: https://developer.nrel.gov/api/alt-fuel-stations/v1/nearest.json?api_key=fnbd0jdLThE2s7h3D8CqaCE3EPquZw7YIYiGXlbb&fuel_type=ELEC&limit=5&location=Loveland,%20CO
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 16 Feb 2023 22:10:37 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Methods:
      - GET, POST, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Max-Age:
      - '86400'
      Age:
      - '0'
      Cache-Control:
      - max-age=0, private, must-revalidate
      Last-Modified:
      - Thu, 16 Feb 2023 22:10:37 GMT
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      - max-age=31536000; preload
      Vary:
      - Accept-Encoding
      - Accept-Encoding,Origin
      Via:
      - http/1.1 api-umbrella (ApacheTrafficServer [cMsSf ])
      X-Cache:
      - MISS
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Ratelimit-Limit:
      - '1000'
      X-Ratelimit-Remaining:
      - '999'
      X-Request-Id:
      - dbba17271b70ea850d250d9ee546d457
      X-Runtime:
      - '0.021626'
      X-Vcap-Request-Id:
      - 18a7a033-9e20-4bd2-79a1-87e2812240d1
      X-Xss-Protection:
      - 1; mode=block
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 16 Feb 2023 22:10:37 GMT
recorded_with: VCR 6.1.0
